" significant portions taken from <https://www.mojotech.com/blog/vimrc-tutorial/>

" disable `vi` compatibility
set nocompatible

" backspace behavior
set backspace=indent,eol,start

" leader to space
" let mapleader = "\<Space>"

" enable rich color
set t_Co=256

" SHOW TRAILING WHITESPACE WOOHOO
set list
set listchars=tab:>-,trail:.,extends:#,nbsp:.

" command history & undo history
set undolevels=100

" indenting
set softtabstop=2
set shiftround
set smarttab
set autoindent
set nowrap " controversial

" do not fold (hide) regions of code
set nofoldenable

" ruler at column limit
set ruler
" set colorcolumn=100 " imo better than 80

" syntax highlighting
syntax on
filetype on
filetype plugin on
filetype indent on

" search behavior
set incsearch " match as you type

" keep 2 lines above/below the cursor when scrolling
set scrolloff=8
set sidescrolloff=8

" shut the fuck up
" set visualbell " OUCH
set noerrorbells
set belloff=all

" detect non-Vim file changes & read them into the buffer
set autoread

" status bar
set laststatus=2
set showmode
set showcmd

" rendering
set ttyfast

" autocompletion
set wildmenu
set wildmode=list:longest

" update more often
" set updatetime=250

set cot+=preview

" line cursor in insert mode
" <https://stackoverflow.com/questions/6488683/how-to-change-the-cursor-between-normal-and-insert-modes-in-vim>
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"
" reset the cursor on start (for older versions of vim, usually not required)
augroup myCmds
au!
autocmd VimEnter * silent !echo -ne "\e[2 q"
augroup END

# vim-lsp servers
if executable('nil')
  au User lsp_setup call lsp#register_server({
    \ 'name': 'nil',
    \ 'cmd': {server_info->['nil']},
    \ 'allowlist': ['nix'],
    \ })
endif

# vim-lsp keymap
function! s:on_lsp_buffer_enabled() abort
  setlocal omnifunc=lsp#complete
  setlocal signcolumn=yes
  if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
  nmap <buffer> gd <plug>(lsp-definition)
  nmap <buffer> gs <plug>(lsp-document-symbol-search)
  nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
  nmap <buffer> gr <plug>(lsp-references)
  nmap <buffer> gi <plug>(lsp-implementation)
  nmap <buffer> gt <plug>(lsp-type-definition)
  nmap <buffer> <leader>rn <plug>(lsp-rename)
  nmap <buffer> [g <plug>(lsp-previous-diagnostic)
  nmap <buffer> ]g <plug>(lsp-next-diagnostic)
  nmap <buffer> K <plug>(lsp-hover)
  nnoremap <buffer> <expr><c-f> lsp#scroll(+4)
  nnoremap <buffer> <expr><c-d> lsp#scroll(-4)

  let g:lsp_format_sync_timeout = 1000
  autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')

  " refer to doc to add more commands
endfunction

# vim-lsp ... something else
augroup lsp_install
  au!
  " call s:on_lsp_buffer_enabled only for languages that has the server registered.
  autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
