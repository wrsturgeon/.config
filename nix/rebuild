#!/usr/bin/env bash

set -eu

export OS="$(uname -s)"
export COMMIT_DATE='`'"$(date '+%Y/%m/%d %H:%M:%S') ${OS}"'`'

# Synchronize Logseq notes:
cd ~/Desktop/logseq
git pull
git submodule update --init --recursive --remote
make .updated
git add -A
git commit -m "${COMMIT_DATE}" || :
git push

# Remove succeed/failure flag:
rm -f .build-succeeded .build-failed

# Push ~/.config changes:
cd ~/.config
git pull
cd nix
nixfmt .
git add -A
nix flake update || : # rate limits!
git add -A
git commit -m "${COMMIT_DATE} :wrench:" || :
git push || :

if [[ "${OS}" == "Linux" ]]; then
  cd /etc/nixos
  sudo git pull
  export CMD="sudo nixos-rebuild"
else
  if [[ "${OS}" == "Darwin" ]]; then
    # export CMD="nix run nix-darwin --"
    export CMD="darwin-rebuild"
  else
    echo 'Unrecognized OS'
    exit 1
  fi
fi

# Rebuild the Nix system:
if
  ${CMD} switch --flake . --keep-going -v -j auto --show-trace # --install-bootloader
then
  touch .build-succeeded
  git add -A
  git commit -m "${COMMIT_DATE} :white_check_mark:" || :
  git push || :
  ( nix-collect-garbage -j auto --delete-old > /dev/null 2>&1 & )
else
  touch .build-failed
  git add -A
  git commit -m "${COMMIT_DATE} :fire:" || :
  git push || :
fi
