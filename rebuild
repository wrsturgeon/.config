#!/usr/bin/env bash

set -eux

export OS="$(uname -s)"
export COMMIT_DATE='`'"$(date '+%Y/%m/%d %H:%M:%S') ${OS} "'`'
export WHOAMI=$(whoami)

if [ -f ./usernames ]; then
  if grep -Fxq "${WHOAMI}" ./usernames; then :; else
    echo "${WHOAMI}" >> ./usernames
  fi
else
  echo "${WHOAMI}" >> ./usernames
fi

if [ "${1:+1}" ]; then :; else

  # Synchronize Logseq notes:
  if [ -d ~/Desktop/logseq ]; then
    cd ~/Desktop/logseq
    git pull
    git submodule update --init --recursive --remote
    make .updated
    git add -A
    git commit -m "${COMMIT_DATE}" || :
    git push
  fi

  # Remove succeed/failure flag:
  if [ -d ~/.config/nix ]; then
    cd ~/.config/nix
  else
    if [ -d /etc/nixos ]; then
      cd /etc/nixos
    else
      echo 'Neither ~/.config/nix nor /etc/nixos exist!'
      exit 1
    fi
  fi
  git pull
  rm -f .build-succeeded .build-failed
  nixfmt .
  git add -A
  git commit -m "${COMMIT_DATE}:wrench:" || :
  git push || :

  # Push ~/.config changes:
  nix flake update || : # rate limits!
  git add -A
  git commit -m "${COMMIT_DATE}:arrow_up:" || :
  git push || :
fi

if [[ "${OS}" == "Linux" ]]; then
  cd /etc/nixos
  sudo git fetch
  sudo git reset --hard origin/main
  export CMD="sudo nixos-rebuild"
else
  if [[ "${OS}" == "Darwin" ]]; then
    export CMD="nix --extra-experimental-features flakes --extra-experimental-features nix-command run nix-darwin --"
    # export CMD="darwin-rebuild"
  else
    echo 'Unrecognized OS'
    exit 1
  fi
fi

# Rebuild the Nix system:
if
  ${CMD} switch --flake . --keep-going -v -j auto --show-trace # --install-bootloader
then
  cd ~/.config/nix
  touch .build-succeeded
  if [ "${1:+1}" ]; then :; else
    git add -A
    git commit -m "${COMMIT_DATE}:white_check_mark:" || :
    git push || :
  fi
  ( nix-collect-garbage -j auto --delete-old > /dev/null 2>&1 & )
else
  cd ~/.config/nix
  touch .build-failed
  if [ "${1:+1}" ]; then :; else
    git add -A
    git commit -m "${COMMIT_DATE}:fire:" || :
    git push || :
  fi
fi
