#!/usr/bin/env bash

set -eu

export OS="$(uname -s)"
export COMMIT_DATE='`'"$(date '+%Y/%m/%d %H:%M:%S') ${OS} "'`'

# Synchronize Logseq notes:
cd ~/Desktop/logseq
git pull
git submodule update --init --recursive --remote
make .updated
git add -A
git commit -m "${COMMIT_DATE}" || :
git push

# Remove succeed/failure flag:
cd ~/.config/nix
rm -f .build-succeeded .build-failed
nixfmt .
git add -A
git commit -m "${COMMIT_DATE}:wrench:" || :
git push || :

# Push ~/.config changes:
nix flake update || : # rate limits!
git add -A
git commit -m "${COMMIT_DATE}:arrow_up:" || :
git push || :

if [[ "${OS}" == "Linux" ]]; then
  cd /etc/nixos
  sudo git pull
  export CMD="sudo nixos-rebuild"
  export SUDO_IF_NECESSARY="sudo"
else
  if [[ "${OS}" == "Darwin" ]]; then
    # export CMD="nix run nix-darwin --"
    export CMD="darwin-rebuild"
    export SUDO_IF_NECESSARY=""
  else
    echo 'Unrecognized OS'
    exit 1
  fi
fi

# Rebuild the Nix system:
if
  ${CMD} switch --flake . --keep-going -v -j auto --show-trace # --install-bootloader
then
  ${SUDO_IF_NECESSARY} touch .build-succeeded
  ${SUDO_IF_NECESSARY} git add -A
  ${SUDO_IF_NECESSARY} git commit -m "${COMMIT_DATE}:white_check_mark:" || :
  ${SUDO_IF_NECESSARY} git push || :
  ( nix-collect-garbage -j auto --delete-old > /dev/null 2>&1 & )
else
  ${SUDO_IF_NECESSARY} touch .build-failed
  ${SUDO_IF_NECESSARY} git add -A
  ${SUDO_IF_NECESSARY} git commit -m "${COMMIT_DATE}:fire:" || :
  git push || :
fi
